; REQUIRES: regkeys, spirv-as, dg2-supported
; RUN: spirv-as --target-env spv1.0 -o %t.spv %s
; RUN: ocloc compile -spirv_input -file %t.spv -device dg2 -options " -igc_opts 'ShaderDumpTranslationOnly=1'" 2>&1 | FileCheck %s --check-prefixes=CHECK,%SPV_CHECK_PREFIX%

; LLVM15PLUS expects -emit-opaque-pointers to be passed

; CHECK-LABEL: spir_kernel void @test

; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS1Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS1Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS1Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS1Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS3Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS3Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS3Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS3Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS2Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS2Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS2Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPU3AS2Dh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPDh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPDh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPDh(
; CHECK-KHR: call spir_func float @{{[0-9A-z_]+}}vload_half_RfloatiPDh(

; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p1f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p1f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p1f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p1f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p3f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p3f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p3f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p3f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p2f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p2f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p2f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p2f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p0f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p0f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p0f16(
; CHECK-LEGACY: call spir_func float @{{[0-9A-z_]+}}vload_half_i32_p0f16(

; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS1KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS1KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS1KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS1KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS3KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS3KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS3KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS3KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS2KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS2KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS2KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPU3AS2KDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPKDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPKDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPKDh
; CHECK-LLVM15PLUS: call spir_func float @_Z10vload_halfjPKDh

               OpCapability Addresses
               OpCapability Kernel
               OpCapability Float16Buffer
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %7 "test"
         %34 = OpString "kernel_arg_type.test.half*,half*,"
               OpSource OpenCL_C 200000
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
       %void = OpTypeVoid
       %half = OpTypeFloat 16
%_ptr_CrossWorkgroup_half = OpTypePointer CrossWorkgroup %half
%_ptr_Workgroup_half = OpTypePointer Workgroup %half
          %6 = OpTypeFunction %void %_ptr_CrossWorkgroup_half %_ptr_Workgroup_half
      %float = OpTypeFloat 32
%_ptr_UniformConstant_half = OpTypePointer UniformConstant %half
%_ptr_Function_half = OpTypePointer Function %half
         %23 = OpUndef %_ptr_UniformConstant_half
         %29 = OpUndef %_ptr_Function_half
          %7 = OpFunction %void None %6
         %pg = OpFunctionParameter %_ptr_CrossWorkgroup_half
         %pl = OpFunctionParameter %_ptr_Workgroup_half
      %entry = OpLabel
       %call = OpExtInst %float %1 vload_half %uint_0 %pg
      %call1 = OpExtInst %float %1 vload_half %uint_0 %pg
      %call2 = OpExtInst %float %1 vload_half %uint_0 %pg
      %call3 = OpExtInst %float %1 vload_half %uint_0 %pg
      %call4 = OpExtInst %float %1 vload_half %uint_0 %pl
      %call5 = OpExtInst %float %1 vload_half %uint_0 %pl
      %call6 = OpExtInst %float %1 vload_half %uint_0 %pl
      %call7 = OpExtInst %float %1 vload_half %uint_0 %pl
      %call8 = OpExtInst %float %1 vload_half %uint_0 %23
      %call9 = OpExtInst %float %1 vload_half %uint_0 %23
     %call10 = OpExtInst %float %1 vload_half %uint_0 %23
     %call11 = OpExtInst %float %1 vload_half %uint_0 %23
     %call12 = OpExtInst %float %1 vload_half %uint_0 %29
     %call13 = OpExtInst %float %1 vload_half %uint_0 %29
     %call14 = OpExtInst %float %1 vload_half %uint_0 %29
     %call15 = OpExtInst %float %1 vload_half %uint_0 %29
               OpReturn
               OpFunctionEnd
